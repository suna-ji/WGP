package wpg;
import java.util.*;

public class InteractionWithParent{
	private Scanner scanner;
	private Child child;
	SelectOperationType selectOperationType = new SelectOperationType();

	public InteractionWithParent() {
		scanner = new Scanner(System.in);
	}

	// 자녀에 대한 Interaction -(1) 이름
	public void getChildName() {
		System.out.println("자녀의 이름을 입력해주세요.");
		String childName = scanner.nextLine();
		child.setName(childName);
	}
	// 자녀에 대한 Interaction -(2) 중요한 사람
	public void getImportantPeople() {
		System.out.println("자녀에게 중요한 사람들의 이름을 적어주세요. 입력이 끝났다면 quit를 입력해주세요.");
		String response = null;
		while(!"quit".equalsIgnoreCase(response)) {
			response = scanner.nextLine();
			if("quit".equalsIgnoreCase(response)) {
				return;
			}
			child.setImportantPeople(response);
			System.out.println("입력이 끝나지 않았다면 다시 이름을 적어주세요. 만약, 입력이 끝났다면 quit를 입력해주세요.");
		}
	}
	// 자녀에 대한 Interaction -(2) 중요한 것들
	public void getImportantThings() {
		System.out.println("자녀가 관심을 갖고 있는 항목의 이름을 적어주세요. 입력이 끝났다면 quit를 입력해주세요.");
		String response = null;
		while(!"quit".equalsIgnoreCase(response)) {
			response = scanner.nextLine();
			if("quit".equalsIgnoreCase(response)) {
				return;
			}
			child.setImportantThings(response);
			System.out.println("입력이 끝나지 않았다면 다시 이름을 적어주세요. 만약, 입력이 끝났다면 quit를 입력해주세요.");
		}
	}
	public void interactionAboutChild() {
		child = new Child();
		getChildName();
		getImportantPeople();
		getImportantThings();
	}
	
	
	// 문제에 대한 Interaction - (1)문제유형
	private void getOperationType() throws DuplicateException, RangeException { 
		HashMap myPossibleProblems = selectOperationType.getMyPossibleOperationType();
		System.out.println("아래의 연산중에 선택해주세요:");
		for (int k = 0; k < myPossibleProblems.size(); k++) {
			System.out.println((k + 1) + ") " + myPossibleProblems.get(k));
		}
		int whichProblem = scanner.nextInt();
		while(0!=whichProblem) {
			selectOperationType.checkAndAdd(whichProblem);
			System.out.println("선택이 끝나지 않았다면 다시 선택해주세요. 만약, 선택이 끝났다면 0 입력해주세요.");
			whichProblem = scanner.nextInt();
		}
	}
	// 문제에 대한 Interaction - (2)문제 개수
	public int getProblemNum() {
		System.out.println("몇개의 문제를 생성할까요?");
		int problemNum = scanner.nextInt();
		return problemNum;	
	}
	// 문제에 대한 Interaction - (3)피연산자의 범위
	public OperandRange getOperandRange() {
		System.out.println("피연산자의 시작 범위를 입력해주세요.");
		int start = scanner.nextInt();
		System.out.println("피연산자의 끝 범위를 입력해주세요.");
		int end = scanner.nextInt();
		return new OperandRange(start, end);
	}

}
